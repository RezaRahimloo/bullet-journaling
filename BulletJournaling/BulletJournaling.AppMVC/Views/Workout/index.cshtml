
@model List<WorkoutModel>;

@{
    ViewData["Title"] = "Workout";
    int proccessedDays = 0;
}

@section Styles {
    <link rel="stylesheet" href="~/css/workout/index.css" asp-append-version="true" />
}
@section Scripts {
    <script src="~/js/workout/index.js" asp-append-version="true"></script>
    <script src="~/js/workout/validation.js" asp-append-version="true"></script>
}
<div id="workout-calender" class="calender">
    @for (int month = -3; month < 1; month++)
    {  
        DateOnly fourMonthsAgo = DateOnly.FromDateTime(DateTime.Now).AddMonths(month);
        DateOnly lastFourMonths = new(fourMonthsAgo.Year, fourMonthsAgo.Month, 1);
        int daysOfMonth = DateTime.DaysInMonth(lastFourMonths.Year, lastFourMonths.Month);
        int thisMonthsProccessed = 0;
        <div class="month">
            <div class="month-header">
                <h3 class="month-name">
                    @lastFourMonths.ToString("MMMM")
                </h3>
                <div class="day-names">
                    <div class="day-name">sun</div>
                    <div class="day-name">mon</div>
                    <div class="day-name">tue</div>
                    <div class="day-name">wed</div>
                    <div class="day-name">thr</div>
                    <div class="day-name">fri</div>
                    <div class="day-name">sat</div>
                    
                </div>
            </div>
            @for (int week = 0; week < 6; week++)
            {
                <div class="week">
                    @{int k =0;}
                    @for (int day = 0; day < 7; day++)
                    {
                        
                        if (week == 0 && k < (int)lastFourMonths.DayOfWeek)
                        {
                            <div class="day workout dropdown" data-did="false" style="background-color: grey;" data-date="">
                            </div>
                            k++;
                            continue;
                        }
                        if(week == 5 && thisMonthsProccessed == daysOfMonth)
                        {
                            continue;
                        }
                        if(@Model[proccessedDays].didWorkout)
                        {
                            <div class="day workout dropdown" data-did="true">
                                <div class="dropdown-content">
                                    <div class="type info">
                                        you worked out your: @Model[proccessedDays].Type
                                    </div>
                                    <div class="duration info" data-duration="@Model[proccessedDays].DurationMintues">
                                        it took you @Model[proccessedDays].DurationMintues minutes to Finish!
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="day workout dropdown" data-did="false">

                            </div>
                        }
                        proccessedDays++;
                        thisMonthsProccessed++;
                        if(thisMonthsProccessed == daysOfMonth)
                        {
                            break;
                        }
                    }
                </div>
            }
        </div>
    }
</div>
<button id="addToday">Add today's workout</button>
<div id="log-form-wrapper">
    <partial name="_AddTodayPartial" model = "new WorkoutModel
    {
        didWorkout = false,
        Type = string.Empty,
        DurationMintues = 0
    }"/>
</div>
<div class="grey-shade-form"></div>
